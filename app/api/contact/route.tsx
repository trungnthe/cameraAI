// app/api/contact/route.ts
import { NextRequest, NextResponse } from "next/server"
import nodemailer from "nodemailer"

export async function POST(req: NextRequest) {
  const { name, email, company, service, message } = await req.json()

  const transporter = nodemailer.createTransport({
    service: "gmail", // ho·∫∑c d√πng SMTP server ri√™ng
    auth: {
      user: process.env.EMAIL_USER, // v√≠ d·ª•: example@gmail.com
      pass: process.env.EMAIL_PASS, // App Password (n·∫øu d√πng Gmail)
    },
  })

  const mailOptions = {
    from: `"${name}" <${email}>`,
    to: process.env.EMAIL_USER,
    subject: `New Contact Form - ${service || "No service selected"}`,
    html: `
      <div style="font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px;">
        <h2 style="color: #c62828;">üì© Th√¥ng tin li√™n h·ªá m·ªõi t·ª´ website CameraAI</h2>
        <p>Xin ch√†o <strong>ƒê·ªôi ng≈© MCK Group</strong>,</p>
        <p>Kh√°ch h√†ng ƒë√£ g·ª≠i y√™u c·∫ßu t∆∞ v·∫•n th√¥ng qua bi·ªÉu m·∫´u li√™n h·ªá:</p>

        <table style="width: 100%; border-collapse: collapse;">
          <tr>
            <td style="padding: 8px; border: 1px solid #ddd;"><strong>H·ªç t√™n</strong></td>
            <td style="padding: 8px; border: 1px solid #ddd;">${name}</td>
          </tr>
          <tr>
            <td style="padding: 8px; border: 1px solid #ddd;"><strong>Email</strong></td>
            <td style="padding: 8px; border: 1px solid #ddd;">${email}</td>
          </tr>
          <tr>
            <td style="padding: 8px; border: 1px solid #ddd;"><strong>C√¥ng ty</strong></td>
            <td style="padding: 8px; border: 1px solid #ddd;">${company || "Kh√¥ng cung c·∫•p"}</td>
          </tr>
          <tr>
            <td style="padding: 8px; border: 1px solid #ddd;"><strong>D·ªãch v·ª• quan t√¢m</strong></td>
            <td style="padding: 8px; border: 1px solid #ddd;">${getServiceLabel(service)}</td>
          </tr>
        </table>

        <p style="margin-top: 20px;"><strong>N·ªôi dung tin nh·∫Øn:</strong></p>
        <div style="padding: 12px; background-color: #f9f9f9; border-left: 4px solid #c62828;">
          ${message}
        </div>

        <hr style="margin-top: 30px;" />
        <p style="font-size: 14px; color: #666;">
          ƒê√¢y l√† email t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng <strong>CameraAI - MCK Group</strong>. Vui l√≤ng ph·∫£n h·ªìi qua ƒë·ªãa ch·ªâ email ng∆∞·ªùi g·ª≠i n·∫øu c·∫ßn li√™n h·ªá l·∫°i.
        </p>
      </div>
    `,

  }

  try {
    await transporter.sendMail(mailOptions)
    return NextResponse.json({ success: true })
  } catch (error) {
    console.error("Email send error:", error)
    return NextResponse.json({ success: false, error: "G·ª≠i email th·∫•t b·∫°i" }, { status: 500 })
  }
}

function getServiceLabel(value: string) {
  switch (value) {
    case "basic":
      return "G√≥i AI C∆° B·∫£n"
    case "professional":
      return "G√≥i AI Chuy√™n Nghi·ªáp"
    case "enterprise":
      return "G√≥i AI Doanh Nghi·ªáp"
    case "custom":
      return "Gi·∫£i Ph√°p T√πy Ch·ªânh"
    case "demo":
      return "Y√™u C·∫ßu D√πng Th·ª≠"
    default:
      return "Kh√¥ng x√°c ƒë·ªãnh"
  }
}

